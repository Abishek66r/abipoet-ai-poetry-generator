{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D E L L\\\\Desktop\\\\portfolioprojects\\\\zai_poet\\\\frontend\\\\src\\\\components\\\\PoetryGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Copy, Download, Wand2, Shuffle, Hash } from \"lucide-react\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst poetryGenres = [\"Lyric Poetry\", \"Narrative Poetry\", \"Dramatic Poetry\", \"Satirical Poetry\", \"Light Verse\", \"Confessional Poetry\", \"Prose Poetry\", \"Speculative Poetry\", \"Concrete/Visual Poetry\", \"Abecedarian\", \"Acrostic\", \"Alexandrine\", \"Allegory\", \"Ballad\", \"Ballade\", \"Blank Verse\", \"Blues Poem\", \"Bop\", \"Cento\", \"Cinquain\", \"Couplet\", \"Dramatic Monologue\", \"Duplex\", \"Ekphrastic\", \"Elegy\", \"Epic\", \"Epigram\", \"Epitaph\", \"Erasure/Blackout\", \"Fable\", \"Found Poem\", \"Free Verse\", \"Ghazal\", \"Golden Shovel\", \"Haiku\", \"Idyll\", \"Limerick\", \"Ode\", \"Pantoum\", \"Pastoral\", \"Quatrain\", \"Rhymed Poetry\", \"Sestina\", \"Soliloquy\", \"Sonnet\", \"Tanka\", \"Terza Rima\", \"Triolet\", \"Villanelle\", \"Verse Drama\", \"Verse Novel\"];\nconst genreLineConstraints = {\n  Haiku: {\n    min: 3,\n    max: 3,\n    recommended: 3,\n    description: \"Traditional 3-line structure (5-7-5)\"\n  },\n  Limerick: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"5-line humorous poem\"\n  },\n  Cinquain: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"5-line structured poem\"\n  },\n  Tanka: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"Traditional 5-line Japanese poem\"\n  },\n  Sonnet: {\n    min: 14,\n    max: 14,\n    recommended: 14,\n    description: \"14-line structured poem\"\n  },\n  Villanelle: {\n    min: 19,\n    max: 19,\n    recommended: 19,\n    description: \"19-line poem with repeating refrains\"\n  },\n  Sestina: {\n    min: 39,\n    max: 39,\n    recommended: 39,\n    description: \"39-line complex form\"\n  },\n  Epigram: {\n    min: 1,\n    max: 4,\n    recommended: 2,\n    description: \"Short, witty saying\"\n  },\n  Epitaph: {\n    min: 1,\n    max: 8,\n    recommended: 4,\n    description: \"Brief memorial text\"\n  },\n  Couplet: {\n    min: 2,\n    max: 2,\n    recommended: 2,\n    description: \"2-line rhyming stanza\"\n  },\n  Quatrain: {\n    min: 4,\n    max: 4,\n    recommended: 4,\n    description: \"4-line stanza\"\n  },\n  Triolet: {\n    min: 8,\n    max: 8,\n    recommended: 8,\n    description: \"8-line poem with refrains\"\n  },\n  Ghazal: {\n    min: 5,\n    max: 15,\n    recommended: 7,\n    description: \"5-15 couplets with refrain\"\n  },\n  Pantoum: {\n    min: 8,\n    max: 20,\n    recommended: 12,\n    description: \"Interlocking quatrains\"\n  },\n  Ballade: {\n    min: 28,\n    max: 28,\n    recommended: 28,\n    description: \"28-line French form\"\n  },\n  \"Terza Rima\": {\n    min: 9,\n    max: 30,\n    recommended: 14,\n    description: \"Interlocking triplets\"\n  },\n  Ode: {\n    min: 10,\n    max: 30,\n    recommended: 18,\n    description: \"Formal lyrical poem\"\n  },\n  Elegy: {\n    min: 10,\n    max: 50,\n    recommended: 20,\n    description: \"Mournful poem\"\n  },\n  Epic: {\n    min: 20,\n    max: 100,\n    recommended: 40,\n    description: \"Long narrative poem\"\n  },\n  Ballad: {\n    min: 12,\n    max: 50,\n    recommended: 24,\n    description: \"Narrative poem\"\n  },\n  \"Free Verse\": {\n    min: 1,\n    max: 100,\n    recommended: 16,\n    description: \"No structural constraints\"\n  },\n  \"Blank Verse\": {\n    min: 5,\n    max: 100,\n    recommended: 20,\n    description: \"Unrhymed iambic pentameter\"\n  },\n  \"Rhymed Poetry\": {\n    min: 4,\n    max: 50,\n    recommended: 16,\n    description: \"Rhyming poem\"\n  },\n  \"Narrative Poetry\": {\n    min: 8,\n    max: 100,\n    recommended: 24,\n    description: \"Story-telling poem\"\n  },\n  \"Lyric Poetry\": {\n    min: 4,\n    max: 30,\n    recommended: 16,\n    description: \"Personal expression\"\n  },\n  \"Dramatic Poetry\": {\n    min: 10,\n    max: 50,\n    recommended: 20,\n    description: \"Dramatic monologue\"\n  },\n  \"Satirical Poetry\": {\n    min: 4,\n    max: 30,\n    recommended: 12,\n    description: \"Humorous critique\"\n  },\n  Pastoral: {\n    min: 8,\n    max: 40,\n    recommended: 20,\n    description: \"Rural life poem\"\n  },\n  \"Prose Poetry\": {\n    min: 1,\n    max: 50,\n    recommended: 15,\n    description: \"Poetic prose\"\n  },\n  \"Found Poem\": {\n    min: 5,\n    max: 30,\n    recommended: 12,\n    description: \"Collage from existing text\"\n  },\n  \"Concrete/Visual Poetry\": {\n    min: 3,\n    max: 20,\n    recommended: 8,\n    description: \"Visual arrangement\"\n  },\n  \"Blues Poem\": {\n    min: 12,\n    max: 24,\n    recommended: 16,\n    description: \"AAB rhyme pattern\"\n  },\n  Bop: {\n    min: 12,\n    max: 12,\n    recommended: 12,\n    description: \"12-line structure\"\n  },\n  Cento: {\n    min: 10,\n    max: 30,\n    recommended: 15,\n    description: \"Collage poem\"\n  },\n  \"Dramatic Monologue\": {\n    min: 15,\n    max: 50,\n    recommended: 25,\n    description: \"Character speech\"\n  },\n  Duplex: {\n    min: 8,\n    max: 20,\n    recommended: 14,\n    description: \"Couplet form\"\n  },\n  Ekphrastic: {\n    min: 8,\n    max: 30,\n    recommended: 16,\n    description: \"Art description\"\n  },\n  \"Erasure/Blackout\": {\n    min: 5,\n    max: 25,\n    recommended: 12,\n    description: \"Text removal\"\n  },\n  Fable: {\n    min: 8,\n    max: 24,\n    recommended: 16,\n    description: \"Moral story\"\n  },\n  \"Golden Shovel\": {\n    min: 10,\n    max: 30,\n    recommended: 14,\n    description: \"Line-ending words\"\n  },\n  Idyll: {\n    min: 8,\n    max: 24,\n    recommended: 16,\n    description: \"Peaceful scene\"\n  },\n  Soliloquy: {\n    min: 12,\n    max: 40,\n    recommended: 20,\n    description: \"Inner thoughts\"\n  },\n  \"Verse Drama\": {\n    min: 20,\n    max: 100,\n    recommended: 40,\n    description: \"Dramatic verse\"\n  },\n  \"Verse Novel\": {\n    min: 30,\n    max: 200,\n    recommended: 60,\n    description: \"Novel in verse\"\n  },\n  \"Light Verse\": {\n    min: 4,\n    max: 20,\n    recommended: 8,\n    description: \"Humorous poem\"\n  },\n  \"Confessional Poetry\": {\n    min: 10,\n    max: 40,\n    recommended: 20,\n    description: \"Personal revelation\"\n  },\n  \"Speculative Poetry\": {\n    min: 8,\n    max: 40,\n    recommended: 20,\n    description: \"Imaginative themes\"\n  },\n  Abecedarian: {\n    min: 26,\n    max: 26,\n    recommended: 26,\n    description: \"Alphabetical lines\"\n  },\n  Alexandrine: {\n    min: 8,\n    max: 30,\n    recommended: 12,\n    description: \"12-syllable lines\"\n  },\n  Allegory: {\n    min: 12,\n    max: 50,\n    recommended: 24,\n    description: \"Symbolic narrative\"\n  },\n  Acrostic: {\n    min: 3,\n    max: 20,\n    recommended: 8,\n    description: \"First letters spell word\"\n  }\n};\nconst getLineCountOptions = genre => {\n  const constraints = genreLineConstraints[genre];\n  if (!constraints) {\n    return Array.from({\n      length: 20\n    }, (_, i) => i + 1);\n  }\n  return Array.from({\n    length: constraints.max - constraints.min + 1\n  }, (_, i) => constraints.min + i);\n};\nconst getGenreStyling = genre => {\n  const baseStyles = \"min-h-64 resize-none font-serif leading-relaxed bg-gray-50 dark:bg-gray-800 border-0 w-full\";\n  switch (genre) {\n    case \"Haiku\":\n      return `${baseStyles} text-center text-xl tracking-wide`;\n    case \"Sonnet\":\n      return `${baseStyles} text-lg italic`;\n    case \"Limerick\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Villanelle\":\n      return `${baseStyles} text-lg`;\n    case \"Free Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Ballad\":\n      return `${baseStyles} text-lg`;\n    case \"Ode\":\n      return `${baseStyles} text-lg font-semibold`;\n    case \"Elegy\":\n      return `${baseStyles} text-lg text-gray-700 dark:text-gray-300`;\n    case \"Epic\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Ghazal\":\n      return `${baseStyles} text-lg text-right`;\n    case \"Tanka\":\n      return `${baseStyles} text-center text-lg`;\n    case \"Cinquain\":\n      return `${baseStyles} text-center text-lg`;\n    case \"Acrostic\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Concrete/Visual Poetry\":\n      return `${baseStyles} text-lg text-center whitespace-pre-line`;\n    case \"Blank Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Rhymed Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Narrative Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Lyric Poetry\":\n      return `${baseStyles} text-lg italic`;\n    case \"Dramatic Poetry\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Satirical Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Pastoral\":\n      return `${baseStyles} text-lg text-green-800 dark:text-green-200`;\n    case \"Prose Poetry\":\n      return `${baseStyles} text-lg normal-case`;\n    case \"Epigram\":\n      return `${baseStyles} text-center text-lg font-semibold`;\n    case \"Epitaph\":\n      return `${baseStyles} text-center text-lg italic text-gray-600 dark:text-gray-400`;\n    case \"Found Poem\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Pantoum\":\n      return `${baseStyles} text-lg`;\n    case \"Sestina\":\n      return `${baseStyles} text-lg`;\n    case \"Terza Rima\":\n      return `${baseStyles} text-lg`;\n    case \"Triolet\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Quatrain\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Couplet\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Blues Poem\":\n      return `${baseStyles} text-lg text-blue-800 dark:text-blue-200`;\n    case \"Bop\":\n      return `${baseStyles} text-lg`;\n    case \"Cento\":\n      return `${baseStyles} text-lg italic`;\n    case \"Dramatic Monologue\":\n      return `${baseStyles} text-lg`;\n    case \"Duplex\":\n      return `${baseStyles} text-lg`;\n    case \"Ekphrastic\":\n      return `${baseStyles} text-lg`;\n    case \"Erasure/Blackout\":\n      return `${baseStyles} text-lg bg-black text-white dark:bg-white dark:text-black`;\n    case \"Fable\":\n      return `${baseStyles} text-lg`;\n    case \"Golden Shovel\":\n      return `${baseStyles} text-lg`;\n    case \"Idyll\":\n      return `${baseStyles} text-lg text-green-700 dark:text-green-300`;\n    case \"Soliloquy\":\n      return `${baseStyles} text-lg italic`;\n    case \"Verse Drama\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Verse Novel\":\n      return `${baseStyles} text-lg`;\n    case \"Light Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Confessional Poetry\":\n      return `${baseStyles} text-lg italic`;\n    case \"Speculative Poetry\":\n      return `${baseStyles} text-lg text-purple-800 dark:text-purple-200`;\n    case \"Abecedarian\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Alexandrine\":\n      return `${baseStyles} text-lg`;\n    case \"Allegory\":\n      return `${baseStyles} text-lg`;\n    case \"Ballade\":\n      return `${baseStyles} text-lg`;\n    default:\n      return `${baseStyles} text-lg`;\n  }\n};\nconst formatPoemByGenre = (poem, genre) => {\n  if (genre === \"Concrete/Visual Poetry\") {\n    return poem;\n  }\n  if (genre === \"Haiku\" || genre === \"Tanka\" || genre === \"Cinquain\") {\n    return poem.split(\"\\n\").filter(line => line.trim()).join(\"\\n\");\n  }\n  if (genre === \"Sonnet\") {\n    const lines = poem.split(\"\\n\").filter(line => line.trim());\n    if (lines.length === 14) {\n      return lines.slice(0, 4).join(\"\\n\") + \"\\n\\n\" + lines.slice(4, 8).join(\"\\n\") + \"\\n\\n\" + lines.slice(8, 12).join(\"\\n\") + \"\\n\\n\" + lines.slice(12).join(\"\\n\");\n    }\n  }\n  return poem;\n};\nconst PoetryGenerator = () => {\n  _s();\n  const [keywords, setKeywords] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [lineCount, setLineCount] = useState(\"\");\n  const [generatedPoem, setGeneratedPoem] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSurpriseMe = () => {\n    const randomGenre = poetryGenres[Math.floor(Math.random() * poetryGenres.length)];\n    setSelectedGenre(randomGenre);\n    const constraints = genreLineConstraints[randomGenre];\n    if (constraints && constraints.recommended) {\n      setLineCount(constraints.recommended.toString());\n    } else {\n      setLineCount(\"16\");\n    }\n  };\n  const handleGeneratePoem = async () => {\n    if (!keywords.trim() || !selectedGenre) {\n      alert(\"Please enter keywords and select a genre\");\n      return;\n    }\n    const constraints = genreLineConstraints[selectedGenre];\n    const lineCountNum = parseInt(lineCount) || (constraints === null || constraints === void 0 ? void 0 : constraints.recommended) || 16;\n    if (constraints) {\n      if (lineCountNum < constraints.min || lineCountNum > constraints.max) {\n        alert(`For ${selectedGenre}, please choose between ${constraints.min} and ${constraints.max} lines. ${constraints.description}`);\n        return;\n      }\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8002/generate-poem\", {\n        keywords: keywords.trim(),\n        genre: selectedGenre,\n        lineCount: lineCountNum\n      });\n      setGeneratedPoem(response.data.poem);\n    } catch (error) {\n      console.error(\"Error generating poem:\", error);\n      alert(\"Failed to generate poem. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(generatedPoem);\n      alert(\"Poem copied to clipboard!\");\n    } catch (error) {\n      console.error(\"Error copying to clipboard:\", error);\n    }\n  };\n  const handleDownload = () => {\n    const blob = new Blob([generatedPoem], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `poem-${selectedGenre.toLowerCase().replace(/\\s+/g, \"-\")}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl md:text-6xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-blue-600 bg-clip-text text-transparent mb-4\",\n          children: \"AbiPoet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\",\n          children: \"AI-Powered Poetry Generator with Keyword, Genre & Form Customization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-4\",\n        children: /*#__PURE__*/_jsxDEV(ThemeToggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-xl shadow-xl p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Wand2, {\n            className: \"w-5 h-5 text-purple-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), \"Create Your Poem\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400 mb-6\",\n          children: \"Enter keywords and select a poetry form to generate a unique poem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Keywords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter keywords (e.g., love, nature, stars...)\",\n              value: keywords,\n              onChange: e => setKeywords(e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Poetry Genre/Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGenre,\n              onChange: e => {\n                setSelectedGenre(e.target.value);\n                const constraints = genreLineConstraints[e.target.value];\n                if (constraints && constraints.recommended) {\n                  setLineCount(constraints.recommended.toString());\n                } else {\n                  setLineCount(\"16\");\n                }\n              },\n              className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a poetry form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this), poetryGenres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre,\n                children: genre\n              }, genre, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2 flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Hash, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this), \"Number of Lines\", selectedGenre && genreLineConstraints[selectedGenre] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500 dark:text-gray-400\",\n                children: [\"(\", genreLineConstraints[selectedGenre].min, \"-\", genreLineConstraints[selectedGenre].max, \" lines)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: lineCount,\n              onChange: e => setLineCount(e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select line count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this), selectedGenre && getLineCountOptions(selectedGenre).map(count => {\n                var _genreLineConstraints;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: count.toString(),\n                  children: [count, \" line\", count !== 1 ? \"s\" : \"\", selectedGenre && ((_genreLineConstraints = genreLineConstraints[selectedGenre]) === null || _genreLineConstraints === void 0 ? void 0 : _genreLineConstraints.recommended) === count && \" (recommended)\"]\n                }, count, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), selectedGenre && genreLineConstraints[selectedGenre] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600 dark:text-gray-400 mt-1\",\n              children: genreLineConstraints[selectedGenre].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGeneratePoem,\n              disabled: isLoading || !keywords.trim() || !selectedGenre || !lineCount,\n              className: \"flex-1 bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this), \"Generating...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(Wand2, {\n                  className: \"w-4 h-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 21\n                }, this), \"Generate Poem\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSurpriseMe,\n              className: \"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(Shuffle, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-xl shadow-xl p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Generated Poem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400 mb-4\",\n          children: selectedGenre && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col sm:flex-row sm:items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Genre: \", selectedGenre]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), lineCount && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2022 \", lineCount, \" line\", parseInt(lineCount) !== 1 ? \"s\" : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), generatedPoem ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formatPoemByGenre(generatedPoem, selectedGenre),\n            readOnly: true,\n            className: getGenreStyling(selectedGenre)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCopyToClipboard,\n              className: \"flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Copy, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 19\n              }, this), \"Copy\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownload,\n              className: \"flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this), \"Download\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"min-h-64 flex items-center justify-center text-gray-500 dark:text-gray-400\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Wand2, {\n              className: \"w-12 h-12 mx-auto mb-4 opacity-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your generated poem will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-16 max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-center mb-12 text-gray-800 dark:text-gray-200\",\n        children: \"Poetry Forms & Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mx-auto mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Wand2, {\n              className: \"w-6 h-6 text-purple-600 dark:text-purple-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"AI-Powered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"Advanced AI generates unique, structured poems based on your input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-pink-100 dark:bg-pink-900 rounded-full flex items-center justify-center mx-auto mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Shuffle, {\n              className: \"w-6 h-6 text-pink-600 dark:text-pink-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"40+ Forms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"From Haiku to Sonnet, explore diverse poetry traditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Copy, {\n              className: \"w-6 h-6 text-blue-600 dark:text-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold mb-2\",\n            children: \"Share & Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400\",\n            children: \"Copy to clipboard or download your creations instantly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 559,\n    columnNumber: 5\n  }, this);\n};\n_s(PoetryGenerator, \"/8q+ilNO9CWyKuks9oGE8U7vvio=\");\n_c = PoetryGenerator;\nexport default PoetryGenerator;\nvar _c;\n$RefreshReg$(_c, \"PoetryGenerator\");","map":{"version":3,"names":["React","useState","Copy","Download","Wand2","Shuffle","Hash","ThemeToggle","axios","jsxDEV","_jsxDEV","poetryGenres","genreLineConstraints","Haiku","min","max","recommended","description","Limerick","Cinquain","Tanka","Sonnet","Villanelle","Sestina","Epigram","Epitaph","Couplet","Quatrain","Triolet","Ghazal","Pantoum","Ballade","Ode","Elegy","Epic","Ballad","Pastoral","Bop","Cento","Duplex","Ekphrastic","Fable","Idyll","Soliloquy","Abecedarian","Alexandrine","Allegory","Acrostic","getLineCountOptions","genre","constraints","Array","from","length","_","i","getGenreStyling","baseStyles","formatPoemByGenre","poem","split","filter","line","trim","join","lines","slice","PoetryGenerator","_s","keywords","setKeywords","selectedGenre","setSelectedGenre","lineCount","setLineCount","generatedPoem","setGeneratedPoem","isLoading","setIsLoading","handleSurpriseMe","randomGenre","Math","floor","random","toString","handleGeneratePoem","alert","lineCountNum","parseInt","response","post","data","error","console","handleCopyToClipboard","navigator","clipboard","writeText","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","toLowerCase","replace","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","count","_genreLineConstraints","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/D E L L/Desktop/portfolioprojects/zai_poet/frontend/src/components/PoetryGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Copy, Download, Wand2, Shuffle, Hash } from \"lucide-react\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport axios from \"axios\";\n\nconst poetryGenres = [\n  \"Lyric Poetry\",\n  \"Narrative Poetry\",\n  \"Dramatic Poetry\",\n  \"Satirical Poetry\",\n  \"Light Verse\",\n  \"Confessional Poetry\",\n  \"Prose Poetry\",\n  \"Speculative Poetry\",\n  \"Concrete/Visual Poetry\",\n  \"Abecedarian\",\n  \"Acrostic\",\n  \"Alexandrine\",\n  \"Allegory\",\n  \"Ballad\",\n  \"Ballade\",\n  \"Blank Verse\",\n  \"Blues Poem\",\n  \"Bop\",\n  \"Cento\",\n  \"Cinquain\",\n  \"Couplet\",\n  \"Dramatic Monologue\",\n  \"Duplex\",\n  \"Ekphrastic\",\n  \"Elegy\",\n  \"Epic\",\n  \"Epigram\",\n  \"Epitaph\",\n  \"Erasure/Blackout\",\n  \"Fable\",\n  \"Found Poem\",\n  \"Free Verse\",\n  \"Ghazal\",\n  \"Golden Shovel\",\n  \"Haiku\",\n  \"Idyll\",\n  \"Limerick\",\n  \"Ode\",\n  \"Pantoum\",\n  \"Pastoral\",\n  \"Quatrain\",\n  \"Rhymed Poetry\",\n  \"Sestina\",\n  \"Soliloquy\",\n  \"Sonnet\",\n  \"Tanka\",\n  \"Terza Rima\",\n  \"Triolet\",\n  \"Villanelle\",\n  \"Verse Drama\",\n  \"Verse Novel\",\n];\n\nconst genreLineConstraints = {\n  Haiku: {\n    min: 3,\n    max: 3,\n    recommended: 3,\n    description: \"Traditional 3-line structure (5-7-5)\",\n  },\n  Limerick: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"5-line humorous poem\",\n  },\n  Cinquain: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"5-line structured poem\",\n  },\n  Tanka: {\n    min: 5,\n    max: 5,\n    recommended: 5,\n    description: \"Traditional 5-line Japanese poem\",\n  },\n  Sonnet: {\n    min: 14,\n    max: 14,\n    recommended: 14,\n    description: \"14-line structured poem\",\n  },\n  Villanelle: {\n    min: 19,\n    max: 19,\n    recommended: 19,\n    description: \"19-line poem with repeating refrains\",\n  },\n  Sestina: {\n    min: 39,\n    max: 39,\n    recommended: 39,\n    description: \"39-line complex form\",\n  },\n  Epigram: {\n    min: 1,\n    max: 4,\n    recommended: 2,\n    description: \"Short, witty saying\",\n  },\n  Epitaph: {\n    min: 1,\n    max: 8,\n    recommended: 4,\n    description: \"Brief memorial text\",\n  },\n  Couplet: {\n    min: 2,\n    max: 2,\n    recommended: 2,\n    description: \"2-line rhyming stanza\",\n  },\n  Quatrain: { min: 4, max: 4, recommended: 4, description: \"4-line stanza\" },\n  Triolet: {\n    min: 8,\n    max: 8,\n    recommended: 8,\n    description: \"8-line poem with refrains\",\n  },\n  Ghazal: {\n    min: 5,\n    max: 15,\n    recommended: 7,\n    description: \"5-15 couplets with refrain\",\n  },\n  Pantoum: {\n    min: 8,\n    max: 20,\n    recommended: 12,\n    description: \"Interlocking quatrains\",\n  },\n  Ballade: {\n    min: 28,\n    max: 28,\n    recommended: 28,\n    description: \"28-line French form\",\n  },\n  \"Terza Rima\": {\n    min: 9,\n    max: 30,\n    recommended: 14,\n    description: \"Interlocking triplets\",\n  },\n  Ode: {\n    min: 10,\n    max: 30,\n    recommended: 18,\n    description: \"Formal lyrical poem\",\n  },\n  Elegy: { min: 10, max: 50, recommended: 20, description: \"Mournful poem\" },\n  Epic: {\n    min: 20,\n    max: 100,\n    recommended: 40,\n    description: \"Long narrative poem\",\n  },\n  Ballad: { min: 12, max: 50, recommended: 24, description: \"Narrative poem\" },\n  \"Free Verse\": {\n    min: 1,\n    max: 100,\n    recommended: 16,\n    description: \"No structural constraints\",\n  },\n  \"Blank Verse\": {\n    min: 5,\n    max: 100,\n    recommended: 20,\n    description: \"Unrhymed iambic pentameter\",\n  },\n  \"Rhymed Poetry\": {\n    min: 4,\n    max: 50,\n    recommended: 16,\n    description: \"Rhyming poem\",\n  },\n  \"Narrative Poetry\": {\n    min: 8,\n    max: 100,\n    recommended: 24,\n    description: \"Story-telling poem\",\n  },\n  \"Lyric Poetry\": {\n    min: 4,\n    max: 30,\n    recommended: 16,\n    description: \"Personal expression\",\n  },\n  \"Dramatic Poetry\": {\n    min: 10,\n    max: 50,\n    recommended: 20,\n    description: \"Dramatic monologue\",\n  },\n  \"Satirical Poetry\": {\n    min: 4,\n    max: 30,\n    recommended: 12,\n    description: \"Humorous critique\",\n  },\n  Pastoral: {\n    min: 8,\n    max: 40,\n    recommended: 20,\n    description: \"Rural life poem\",\n  },\n  \"Prose Poetry\": {\n    min: 1,\n    max: 50,\n    recommended: 15,\n    description: \"Poetic prose\",\n  },\n  \"Found Poem\": {\n    min: 5,\n    max: 30,\n    recommended: 12,\n    description: \"Collage from existing text\",\n  },\n  \"Concrete/Visual Poetry\": {\n    min: 3,\n    max: 20,\n    recommended: 8,\n    description: \"Visual arrangement\",\n  },\n  \"Blues Poem\": {\n    min: 12,\n    max: 24,\n    recommended: 16,\n    description: \"AAB rhyme pattern\",\n  },\n  Bop: { min: 12, max: 12, recommended: 12, description: \"12-line structure\" },\n  Cento: { min: 10, max: 30, recommended: 15, description: \"Collage poem\" },\n  \"Dramatic Monologue\": {\n    min: 15,\n    max: 50,\n    recommended: 25,\n    description: \"Character speech\",\n  },\n  Duplex: { min: 8, max: 20, recommended: 14, description: \"Couplet form\" },\n  Ekphrastic: {\n    min: 8,\n    max: 30,\n    recommended: 16,\n    description: \"Art description\",\n  },\n  \"Erasure/Blackout\": {\n    min: 5,\n    max: 25,\n    recommended: 12,\n    description: \"Text removal\",\n  },\n  Fable: { min: 8, max: 24, recommended: 16, description: \"Moral story\" },\n  \"Golden Shovel\": {\n    min: 10,\n    max: 30,\n    recommended: 14,\n    description: \"Line-ending words\",\n  },\n  Idyll: { min: 8, max: 24, recommended: 16, description: \"Peaceful scene\" },\n  Soliloquy: {\n    min: 12,\n    max: 40,\n    recommended: 20,\n    description: \"Inner thoughts\",\n  },\n  \"Verse Drama\": {\n    min: 20,\n    max: 100,\n    recommended: 40,\n    description: \"Dramatic verse\",\n  },\n  \"Verse Novel\": {\n    min: 30,\n    max: 200,\n    recommended: 60,\n    description: \"Novel in verse\",\n  },\n  \"Light Verse\": {\n    min: 4,\n    max: 20,\n    recommended: 8,\n    description: \"Humorous poem\",\n  },\n  \"Confessional Poetry\": {\n    min: 10,\n    max: 40,\n    recommended: 20,\n    description: \"Personal revelation\",\n  },\n  \"Speculative Poetry\": {\n    min: 8,\n    max: 40,\n    recommended: 20,\n    description: \"Imaginative themes\",\n  },\n  Abecedarian: {\n    min: 26,\n    max: 26,\n    recommended: 26,\n    description: \"Alphabetical lines\",\n  },\n  Alexandrine: {\n    min: 8,\n    max: 30,\n    recommended: 12,\n    description: \"12-syllable lines\",\n  },\n  Allegory: {\n    min: 12,\n    max: 50,\n    recommended: 24,\n    description: \"Symbolic narrative\",\n  },\n  Acrostic: {\n    min: 3,\n    max: 20,\n    recommended: 8,\n    description: \"First letters spell word\",\n  },\n};\n\nconst getLineCountOptions = (genre) => {\n  const constraints = genreLineConstraints[genre];\n  if (!constraints) {\n    return Array.from({ length: 20 }, (_, i) => i + 1);\n  }\n\n  return Array.from(\n    { length: constraints.max - constraints.min + 1 },\n    (_, i) => constraints.min + i\n  );\n};\n\nconst getGenreStyling = (genre) => {\n  const baseStyles =\n    \"min-h-64 resize-none font-serif leading-relaxed bg-gray-50 dark:bg-gray-800 border-0 w-full\";\n  switch (genre) {\n    case \"Haiku\":\n      return `${baseStyles} text-center text-xl tracking-wide`;\n    case \"Sonnet\":\n      return `${baseStyles} text-lg italic`;\n    case \"Limerick\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Villanelle\":\n      return `${baseStyles} text-lg`;\n    case \"Free Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Ballad\":\n      return `${baseStyles} text-lg`;\n    case \"Ode\":\n      return `${baseStyles} text-lg font-semibold`;\n    case \"Elegy\":\n      return `${baseStyles} text-lg text-gray-700 dark:text-gray-300`;\n    case \"Epic\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Ghazal\":\n      return `${baseStyles} text-lg text-right`;\n    case \"Tanka\":\n      return `${baseStyles} text-center text-lg`;\n    case \"Cinquain\":\n      return `${baseStyles} text-center text-lg`;\n    case \"Acrostic\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Concrete/Visual Poetry\":\n      return `${baseStyles} text-lg text-center whitespace-pre-line`;\n    case \"Blank Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Rhymed Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Narrative Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Lyric Poetry\":\n      return `${baseStyles} text-lg italic`;\n    case \"Dramatic Poetry\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Satirical Poetry\":\n      return `${baseStyles} text-lg`;\n    case \"Pastoral\":\n      return `${baseStyles} text-lg text-green-800 dark:text-green-200`;\n    case \"Prose Poetry\":\n      return `${baseStyles} text-lg normal-case`;\n    case \"Epigram\":\n      return `${baseStyles} text-center text-lg font-semibold`;\n    case \"Epitaph\":\n      return `${baseStyles} text-center text-lg italic text-gray-600 dark:text-gray-400`;\n    case \"Found Poem\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Pantoum\":\n      return `${baseStyles} text-lg`;\n    case \"Sestina\":\n      return `${baseStyles} text-lg`;\n    case \"Terza Rima\":\n      return `${baseStyles} text-lg`;\n    case \"Triolet\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Quatrain\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Couplet\":\n      return `${baseStyles} text-lg text-center`;\n    case \"Blues Poem\":\n      return `${baseStyles} text-lg text-blue-800 dark:text-blue-200`;\n    case \"Bop\":\n      return `${baseStyles} text-lg`;\n    case \"Cento\":\n      return `${baseStyles} text-lg italic`;\n    case \"Dramatic Monologue\":\n      return `${baseStyles} text-lg`;\n    case \"Duplex\":\n      return `${baseStyles} text-lg`;\n    case \"Ekphrastic\":\n      return `${baseStyles} text-lg`;\n    case \"Erasure/Blackout\":\n      return `${baseStyles} text-lg bg-black text-white dark:bg-white dark:text-black`;\n    case \"Fable\":\n      return `${baseStyles} text-lg`;\n    case \"Golden Shovel\":\n      return `${baseStyles} text-lg`;\n    case \"Idyll\":\n      return `${baseStyles} text-lg text-green-700 dark:text-green-300`;\n    case \"Soliloquy\":\n      return `${baseStyles} text-lg italic`;\n    case \"Verse Drama\":\n      return `${baseStyles} text-lg font-bold`;\n    case \"Verse Novel\":\n      return `${baseStyles} text-lg`;\n    case \"Light Verse\":\n      return `${baseStyles} text-lg`;\n    case \"Confessional Poetry\":\n      return `${baseStyles} text-lg italic`;\n    case \"Speculative Poetry\":\n      return `${baseStyles} text-lg text-purple-800 dark:text-purple-200`;\n    case \"Abecedarian\":\n      return `${baseStyles} text-lg font-mono`;\n    case \"Alexandrine\":\n      return `${baseStyles} text-lg`;\n    case \"Allegory\":\n      return `${baseStyles} text-lg`;\n    case \"Ballade\":\n      return `${baseStyles} text-lg`;\n    default:\n      return `${baseStyles} text-lg`;\n  }\n};\n\nconst formatPoemByGenre = (poem, genre) => {\n  if (genre === \"Concrete/Visual Poetry\") {\n    return poem;\n  }\n\n  if (genre === \"Haiku\" || genre === \"Tanka\" || genre === \"Cinquain\") {\n    return poem\n      .split(\"\\n\")\n      .filter((line) => line.trim())\n      .join(\"\\n\");\n  }\n\n  if (genre === \"Sonnet\") {\n    const lines = poem.split(\"\\n\").filter((line) => line.trim());\n    if (lines.length === 14) {\n      return (\n        lines.slice(0, 4).join(\"\\n\") +\n        \"\\n\\n\" +\n        lines.slice(4, 8).join(\"\\n\") +\n        \"\\n\\n\" +\n        lines.slice(8, 12).join(\"\\n\") +\n        \"\\n\\n\" +\n        lines.slice(12).join(\"\\n\")\n      );\n    }\n  }\n\n  return poem;\n};\n\nconst PoetryGenerator = () => {\n  const [keywords, setKeywords] = useState(\"\");\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [lineCount, setLineCount] = useState(\"\");\n  const [generatedPoem, setGeneratedPoem] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSurpriseMe = () => {\n    const randomGenre =\n      poetryGenres[Math.floor(Math.random() * poetryGenres.length)];\n    setSelectedGenre(randomGenre);\n\n    const constraints = genreLineConstraints[randomGenre];\n    if (constraints && constraints.recommended) {\n      setLineCount(constraints.recommended.toString());\n    } else {\n      setLineCount(\"16\");\n    }\n  };\n\n  const handleGeneratePoem = async () => {\n    if (!keywords.trim() || !selectedGenre) {\n      alert(\"Please enter keywords and select a genre\");\n      return;\n    }\n\n    const constraints = genreLineConstraints[selectedGenre];\n    const lineCountNum = parseInt(lineCount) || constraints?.recommended || 16;\n\n    if (constraints) {\n      if (lineCountNum < constraints.min || lineCountNum > constraints.max) {\n        alert(\n          `For ${selectedGenre}, please choose between ${constraints.min} and ${constraints.max} lines. ${constraints.description}`\n        );\n        return;\n      }\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8002/generate-poem\", {\n        keywords: keywords.trim(),\n        genre: selectedGenre,\n        lineCount: lineCountNum,\n      });\n\n      setGeneratedPoem(response.data.poem);\n    } catch (error) {\n      console.error(\"Error generating poem:\", error);\n      alert(\"Failed to generate poem. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(generatedPoem);\n      alert(\"Poem copied to clipboard!\");\n    } catch (error) {\n      console.error(\"Error copying to clipboard:\", error);\n    }\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([generatedPoem], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `poem-${selectedGenre.toLowerCase().replace(/\\s+/g, \"-\")}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start mb-12\">\n        <div className=\"flex-1 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-blue-600 bg-clip-text text-transparent mb-4\">\n            AbiPoet\n          </h1>\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\n            AI-Powered Poetry Generator with Keyword, Genre & Form Customization\n          </p>\n        </div>\n        <div className=\"ml-4\">\n          <ThemeToggle />\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Input Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-xl p-6\">\n          <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n            <Wand2 className=\"w-5 h-5 text-purple-600\" />\n            Create Your Poem\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n            Enter keywords and select a poetry form to generate a unique poem\n          </p>\n\n          <div className=\"space-y-6\">\n            {/* Keywords Input */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Keywords</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter keywords (e.g., love, nature, stars...)\"\n                value={keywords}\n                onChange={(e) => setKeywords(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\"\n              />\n            </div>\n\n            {/* Genre Selection */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Poetry Genre/Form\n              </label>\n              <select\n                value={selectedGenre}\n                onChange={(e) => {\n                  setSelectedGenre(e.target.value);\n                  const constraints = genreLineConstraints[e.target.value];\n                  if (constraints && constraints.recommended) {\n                    setLineCount(constraints.recommended.toString());\n                  } else {\n                    setLineCount(\"16\");\n                  }\n                }}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\"\n              >\n                <option value=\"\">Select a poetry form</option>\n                {poetryGenres.map((genre) => (\n                  <option key={genre} value={genre}>\n                    {genre}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Line Count Selection */}\n            <div>\n              <label className=\"block text-sm font-medium mb-2 flex items-center gap-2\">\n                <Hash className=\"w-4 h-4\" />\n                Number of Lines\n                {selectedGenre && genreLineConstraints[selectedGenre] && (\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    ({genreLineConstraints[selectedGenre].min}-\n                    {genreLineConstraints[selectedGenre].max} lines)\n                  </span>\n                )}\n              </label>\n              <select\n                value={lineCount}\n                onChange={(e) => setLineCount(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700\"\n              >\n                <option value=\"\">Select line count</option>\n                {selectedGenre &&\n                  getLineCountOptions(selectedGenre).map((count) => (\n                    <option key={count} value={count.toString()}>\n                      {count} line{count !== 1 ? \"s\" : \"\"}\n                      {selectedGenre &&\n                        genreLineConstraints[selectedGenre]?.recommended ===\n                          count &&\n                        \" (recommended)\"}\n                    </option>\n                  ))}\n              </select>\n              {selectedGenre && genreLineConstraints[selectedGenre] && (\n                <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n                  {genreLineConstraints[selectedGenre].description}\n                </p>\n              )}\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-3\">\n              <button\n                onClick={handleGeneratePoem}\n                disabled={\n                  isLoading || !keywords.trim() || !selectedGenre || !lineCount\n                }\n                className=\"flex-1 bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center justify-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                    Generating...\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center\">\n                    <Wand2 className=\"w-4 h-4 mr-2\" />\n                    Generate Poem\n                  </div>\n                )}\n              </button>\n              <button\n                onClick={handleSurpriseMe}\n                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <Shuffle className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Output Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-xl p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Generated Poem</h2>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n            {selectedGenre && (\n              <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                <span>Genre: {selectedGenre}</span>\n                {lineCount && (\n                  <span>\n                    • {lineCount} line{parseInt(lineCount) !== 1 ? \"s\" : \"\"}\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n\n          {generatedPoem ? (\n            <div className=\"space-y-4\">\n              <textarea\n                value={formatPoemByGenre(generatedPoem, selectedGenre)}\n                readOnly\n                className={getGenreStyling(selectedGenre)}\n              />\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={handleCopyToClipboard}\n                  className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  <Copy className=\"w-4 h-4\" />\n                  Copy\n                </button>\n                <button\n                  onClick={handleDownload}\n                  className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  Download\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"min-h-64 flex items-center justify-center text-gray-500 dark:text-gray-400\">\n              <div className=\"text-center\">\n                <Wand2 className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                <p>Your generated poem will appear here</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <div className=\"mt-16 max-w-6xl mx-auto\">\n        <h2 className=\"text-3xl font-bold text-center mb-12 text-gray-800 dark:text-gray-200\">\n          Poetry Forms & Features\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\">\n            <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Wand2 className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n            </div>\n            <h3 className=\"font-semibold mb-2\">AI-Powered</h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Advanced AI generates unique, structured poems based on your input\n            </p>\n          </div>\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\">\n            <div className=\"w-12 h-12 bg-pink-100 dark:bg-pink-900 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Shuffle className=\"w-6 h-6 text-pink-600 dark:text-pink-400\" />\n            </div>\n            <h3 className=\"font-semibold mb-2\">40+ Forms</h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              From Haiku to Sonnet, explore diverse poetry traditions\n            </p>\n          </div>\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 text-center\">\n            <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Copy className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <h3 className=\"font-semibold mb-2\">Share & Save</h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Copy to clipboard or download your creations instantly\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PoetryGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}